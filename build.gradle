// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlin_version = '1.3.61'
        coroutines = '1.3.0'
    }
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.google.gms:google-services:4.3.3'
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.3.0-alpha02"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }

    ext {

        androidLibs = [
                appcompat           : 'androidx.appcompat:appcompat:1.1.0',
                recyclerview        : 'androidx.recyclerview:recyclerview:1.1.0',
                constraintlayout    : 'androidx.constraintlayout:constraintlayout:1.1.3',
                androidxCore        : 'androidx.core:core-ktx:1.2.0',
                lifecycleExtensions : 'android.arch.lifecycle:extensions:1.1.1',
                playServicesLocation: 'com.google.android.gms:play-services-location:17.0.0',
                material            : 'com.google.android.material:material:1.1.0',
                roomRuntime         : 'androidx.room:room-runtime:2.2.4',
                glide               : 'com.github.bumptech.glide:glide:4.9.0',
                dexter              : 'com.karumi:dexter:5.0.0',
                navigationFragment  : 'androidx.navigation:navigation-fragment-ktx:2.2.1',
                navigationUI        : 'androidx.navigation:navigation-ui-ktx:2.2.1'
        ]

        androidKaptLibs = [
                roomCompiler : 'androidx.room:room-compiler:2.2.4',
                glideCompiler: 'com.github.bumptech.glide:compiler:4.9.0',
                daggerCompiler: 'com.google.dagger:dagger-compiler:2.23.1'
        ]

        kotlinLibs = [
                stdlib          : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                coroutinesCore  : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines",
                coroutines      : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"
        ]

        libs = [
                dagger              : 'com.google.dagger:dagger:2.24',
                firebaseAnalytics   : 'com.google.firebase:firebase-analytics:17.2.2',
                firebaseFirestore   : 'com.google.firebase:firebase-firestore:21.4.0'
        ]

        testLibs = [
                junit        : 'junit:junit:4.12',
                mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0",
                mockitoInline: "org.mockito:mockito-inline:2.28.2"
        ]

        androidTestLibs = [
                testRunner: 'androidx.test:runner:1.2.0',
                espresso  : 'androidx.test.espresso:espresso-core:3.2.0'
        ]
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
